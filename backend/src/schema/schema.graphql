type Query {
  #"Verificar si existe el usuario"
  verificarCelular(celular: String!): Boolean!

  #"Login"
  login(celular: String!, contrasena: String!): Boolean!

  #"Informacion de un cliente"
  cliente(celular: String!): Cliente

  #"Informacion de un trabajador"
  trabajador(celular: String!): Trabajador

  #Filtrar los trabajadores por labor en un radio de 3km
  buscarTrabajador(labor: String!, celularCliente: String!): [Realiza]

  #obtener el total a pagar
  pago(codServicio: String!): Float

  #Informacion de los trabajos disponibles
  labor(nombre: String): [Labor]

  #Informacion de las labores que realiza un trabajador
  misLabores(celular: String!): [Realiza]

  #Informacion de TarjetaCredito
  miTarjetadeCredito(celular: String!): TarjetaCredito!
}

type Mutation {
  "Anadir un  Usuario"
  CrearUsuario(usuario: UsuarioInput!): Boolean!
}
type Usuario {
  nombre: String!
  apellido: String!
  celular: String!
  direccion: String!
  email: String!
  cedula: String!
}
type Cliente {
  recibo: String!
  usuario: Usuario!
}
type Trabajador {
  usuario: Usuario!
  estado: Boolean!
  cantservicios: Int!
  fotocedula: String!
  fotoperfil: String!
  promedio: Float!
}
type Realiza {
  codlabor: String!
  nombre_trabajador: String!
  celular: String!
  promedio: Float!
  fotoperfil: String!
  nombre_labor: String!
  direcciontext: String!
  precio: Float!
  descripcion: String!
  estado: Boolean
  distancia: String
}
type Labor {
  nombre: String!
  codigo: String!
  descripcion: String!
}

type TarjetaCredito {
  numerotarjeta: String!
  banco: String!
  cvc: String!
  fvencimiento: String!
}

input UsuarioInput {
  nombre: String!
  apellido: String!
  celular: String!
  contrasena: String!
  direccion: String!
  email: String!
  cedula: String!
}
